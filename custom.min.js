function directedit() {
    var a = document.getElementById("de").parentNode.innerHTML;
    document.getElementById("de").parentNode.innerHTML = null, document.getElementById("directedit").innerHTML = a
}! function(a) {
    "use strict";
    a.fn.fitVids = function(b) {
        var c = {
            customSelector: null
        };
        if (!document.getElementById("fit-vids-style")) {
            var d = document.head || document.getElementsByTagName("head")[0],
                f = document.createElement("div");
            f.innerHTML = '<p>x</p><style id="fit-vids-style">' + ".fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}" + "</style>", d.appendChild(f.childNodes[1])
        }
        return b && a.extend(c, b), this.each(function() {
            var b = ["iframe[src*='player.vimeo.com']", "iframe[src*='youtube.com']", "iframe[src*='youtube-nocookie.com']", "iframe[src*='kickstarter.com'][src*='video.html']", "object", "embed"];
            c.customSelector && b.push(c.customSelector);
            var d = a(this).find(b.join(","));
            d = d.not("object object"), d.each(function() {
                var b = a(this);
                if (!("embed" === this.tagName.toLowerCase() && b.parent("object").length || b.parent(".fluid-width-video-wrapper").length)) {
                    b.css("height") || b.css("width") || !isNaN(b.attr("height")) && !isNaN(b.attr("width")) || (b.attr("height", 9), b.attr("width", 16));
                    var c = "object" === this.tagName.toLowerCase() || b.attr("height") && !isNaN(parseInt(b.attr("height"), 10)) ? parseInt(b.attr("height"), 10) : b.height(),
                        d = isNaN(parseInt(b.attr("width"), 10)) ? b.width() : parseInt(b.attr("width"), 10),
                        e = c / d;
                    if (!b.attr("id")) {
                        var f = "fitvid" + Math.floor(999999 * Math.random());
                        b.attr("id", f)
                    }
                    b.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top", 100 * e + "%"), b.removeAttr("height").removeAttr("width")
                }
            })
        })
    }
}(window.jQuery || window.Zepto), $(document).ready(function() {
    $("a#more_toggle").click(function() {
        $("ul.utility_nav.mobile").toggle("fast")
    }), jQuery(".video_wrapper").fitVids(), $("#flyout-nav a").click(function(a) {
        var b = $(this).data("target");
        $(b).width();
        $(this).parent().is(".active") ? ($(this).parent("li").removeClass("active"), $("#flyout").removeClass("open")) : ($(b).addClass("open").siblings().removeClass("open"), $(this).parent("li").addClass("active").siblings().removeClass("active"), $("#flyout").addClass("open")), a.preventDefault()
    }), $("a.close-flyout").click(function() {
        $("#flyout").removeClass("open"), $("#flyout-nav li").removeClass("active")
    })
}), $(function() {
    var a = window.location.pathname;
    a = a.replace(navtoplevel, "");
    var b = !1;
    if (a.indexOf(".php") > -1) var c = a;
    else var c = a.substring(0, a.lastIndexOf("/")) + "/index.php";
    var d = a.substring(0, a.lastIndexOf("/")) + "/index.php";
    $("ul.sidenav.audience.list-unstyled a[href='/" + d + "']:eq(0)") && $("ul.sidenav.audience.list-unstyled a[href='/" + d + "']:eq(1)") && $("ul.sidenav.audience.list-unstyled a[href='/" + d + "']:eq(1)").parent().remove(), $("ul.sidenav.audience.list-unstyled").each(function() {
        var a = $(this).attr("id"),
            d = $(this);
        a = a.replace(/--/g, "/"), a = "/" + a + ".php", a = a.replace(navtoplevel, ""), "/index.php" == a && $(this).attr("id", "index"), navtoplevel = navtoplevel.replace("/", "--"), navtoplevel += "--", $("ul.sidenav.audience.list-unstyled li a").each(function(e, f) {
            if ($(this).attr("href").replace(navtoplevel, "") == a) try {
                d.appendTo($(this).parent())
            } catch (a) {}
            $(this).attr("href").replace(navtoplevel, "") == c && ($(this).parent().addClass("c-selected"), b = !0)
        })
    }), $(".sidenav li a[href='" + document.location.pathname + "'] ").parent().addClass("active"), $('ul.sidenav.audience.list-unstyled[id*="--"]').each(function() {
        $(this).attr("class", "curnav sidenav audience list-unstyled")
    })
}), $.fn.blogPagination = function(d, e, f) {
    function updatePage(a, b, c) {
        $.ajax({
            type: "POST",
            url: "/_resources/php/blog/listing.php",
            data: {
                action: "display",
                posts: c,
                page: a,
                limit: b
            }
        }).done(function(b) {
            x.html(b), $(".pagination #pageNum input").val(a + 1), a < 1 ? $(".pagination a[href='#prev']").addClass("hide") : $(".pagination a[href='#prev']").removeClass("hide"), a + 1 == x.data("maxPage") ? $(".pagination a[href='#next']").addClass("hide") : $(".pagination a[href='#next']").removeClass("hide"), $(window).scrollTop(0)
        })
    }
    var x = $(this);
    x.data("page", 0)
    $.ajax({
        type: "POST",
        url: "/_resources/php/blog/listing.php",
        data: {
            action: "acquire",
            path: d,
            conditions: e
        },
        global: !1,
        async: !0
    }).done(function(a) {
        //return a;
        x.data("posts", a);
        x.data("posts") && eval(x.data("posts")).length > 0 ? x.data("maxPage", Math.ceil(eval(x.data("posts")).length / f)) : x.data("maxPage", 0);
        $(".pagination a[href='#prev']").addClass("hide");
        1 == x.data("maxPage") && $(".pagination a[href='#next']").addClass("hide");
        $("#pageNum label").append(" of " + x.data("maxPage"));
        $(".pagination a").click(function(a) {
            a.preventDefault();
            var b = x.data("page");
            switch ($(this).attr("href").substring($(this).attr("href").indexOf("#") + 1)) {
                case "next":
                    b + 1 < x.data("maxPage") && x.data("page", b + 1);
                    break;
                case "prev":
                    0 != b && x.data("page", b - 1)
            }
        updatePage(x.data("page"), f, x.data("posts"));
        }), $(".pagination #pageNum").submit(function(a) {
            a.preventDefault(), x.data("page", $(this).find("input").val() - 1 < x.data("maxPage") ? $(this).find("input").val() - 1 : x.data("maxPage")), updatePage(x.data("page"), f, x.data("posts"))
        })
    }); 
    
};
$(document).ready(function() {
    $(".button a").click(function() {
        $(".overlay").fadeToggle(200);
        $(this).toggleClass('btn-open').toggleClass('btn-close')
    })
});
$('.overlay').on('click', function(e) {
    if (e.target.tagName.toLowerCase() === 'input') {
        return
    }
    $(".overlay").fadeToggle(200);
    $(".button a").toggleClass('btn-open').toggleClass('btn-close');
    open = false
});


$(document).ready(function() {

    // bind a click event to the 'skip' link
    $(".skip").click(function(event) {

        // strip the leading hash and declare
        // the content we're skipping to
        var skipTo = "#" + this.href.split('#')[1];

        // Setting 'tabindex' to -1 takes an element out of normal 
        // tab flow but allows it to be focused via javascript
        $(skipTo).attr('tabindex', -1).on('blur focusout', function() {

            // when focus leaves this element, 
            // remove the tabindex attribute
            $(this).removeAttr('tabindex');

        }).focus(); // focus on the content container
    });

});